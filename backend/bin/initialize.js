const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const passport = require('passport');
const morgan = require('morgan');
const swaggerUi = require('swagger-ui-express');
const swaggerJsdoc = require('swagger-jsdoc');
const initializeRoutes = require('../routes');

const options = {
  swaggerDefinition: {
    info: {
      title: 'Tracks API',
      version: '1.0.0',
      description: 'Tracks Express API with autogenerated swagger doc',
    },
  },
  apis: ['./routes/users.js', './routes/tracks.js'],
};

const specs = swaggerJsdoc(options);

module.exports = async app => {
  return new Promise((resolve, reject) => {
    // JWT
    app.use(passport.initialize());
    require('./passport')(passport);

    // LOGGER
    app.use(morgan('dev'));

    //BODY PARSER
    app.use(bodyParser.urlencoded({
      extended: false
    }));
    app.use(bodyParser.json());

    //DOCS
    app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));

    // DB
    mongoose.connect(process.env.DB_URL, {
        useNewUrlParser: true
      })
      .then(
        () => {
          console.log('Database is connected');
          return resolve();
        },
        err => {
          console.log('Can not connect to the database' + err);
          return reject();
        }
      );
  }).then(() => {
    return initializeRoutes(app);
  });
};
